name: Production workflow
on:
  push:
    branches: ['master','main']
  pull_request:
    branches: ['master','main']
jobs:
  test:
    services:
      postgres:
        image: postgres
        env:
          POSTGRES_PASSWORD: postgres
        options:
          --health-cmd pg_isready
          --health-interval 10s
          --health-timeout 5s
          --health-retries 5
        ports:
          - 5432:5432
    env:
      SECRET_KEY: ${{ secrets.SECRET_KEY }}
      DB_ENGINE: django.db.backends.postgresql_psycopg2
      DB_HOST: localhost
      DB_NAME: postgres
      DB_PASSWORD: postgres
      DB_PORT: 5432
      DB_USER: postgres
      DEBUG_VALUE: False
      ALLOWED_HOSTS: '*'
      AWS_ACCESS_KEY_ID: ${{ secrets.AWS_ACCESS_KEY_ID }}
      AWS_SECRET_ACCESS_KEY: ${{ secrets.AWS_SECRET_ACCESS_KEY }}
      AWS_STORAGE_BUCKET_NAME: ${{ secrets.AWS_STORAGE_BUCKET_NAME }}
      REVISIT_CASE: True
      EDIT_CASE: True

    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: Set up Python 3.9
        uses: actions/setup-python@v2
        with:
          python-version: 3.9
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install flake8
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
      - name: Lint with flake8
        run: |
          flake8 case --count --select=E9,F4,F6,F8 --show-source --statistics
          flake8 caseworker --count --select=E9,F4,F6,F8 --show-source --statistics
      - name: Pytest
        run: |
          pytest
  deploy:
    needs: [ test ]
    runs-on: self-hosted
    steps:
      - name: Deploy
        run: |
          cd /home/admin/Whistle_blower
          rm -rf staticfiles
          git pull
          source venv/bin/activate
          if [ -f requirements.txt ]; then pip install -r requirements.txt; fi
          python manage.py collectstatic
          python manage.py migrate
          touch /home/admin/Whistle_blower/config/wsgi.py


